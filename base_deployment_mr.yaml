apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ config.name }}-deploy-{{ config.namespace }}-mr{{ config.pr }}
  labels:
    app: {{ config.name }}-{{ config.namespace }}-mr{{ config.pr }}
  namespace: {{ config.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ config.name }}-{{ config.namespace }}-mr{{ config.pr }}
  template:
    metadata:
      labels:
        app: {{ config.name }}-{{ config.namespace }}-mr{{ config.pr }}
    spec:
      containers:
        - name: nginx
          imagePullPolicy: Always
          image: {{ config.image }}:mr{{ config.pr }}
          env:
            {% for key,value in variables.items() %}
            - name: {{ key.upper() }}
              valueFrom:
                secretKeyRef:
                  name: {{ config.name }}-{{ config.namespace }}-mr{{ config.pr }}-env
                  key: {{ key.upper() }}
            {% endfor %}
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: {{ config.name }}-svc-{{ config.namespace }}-mr{{ config.pr }}
  namespace: {{ config.namespace }}
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: {{ config.name }}-{{ config.namespace }}-mr{{ config.pr }}
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: {{ config.name }}-ingress-{{ config.namespace }}-mr{{ config.pr }}
  namespace: {{ config.namespace }}
spec:
  rules:
    - host: k8s.pescarauto.cl
      http:
        paths:
          - backend:
              service:
                name: {{ config.name }}-svc-{{ config.namespace }}-mr{{ config.pr }}
                port:
                  number: 80
            path: {{ config.ingress_path }}/mr{{config.pr}}(/|$)(.*)
            pathType: Prefix
  tls:
    - hosts:
        - k8s.pescarauto.cl
      secretName: pescara-tls-cert
---
apiVersion: v1
data:
{% for key,value in variables.items() %}
  {{ key.upper() }}: {{ value }}
{% endfor %}
kind: Secret
metadata:
  name: {{ config.name }}-{{ config.namespace }}-mr{{ config.pr }}-env
  namespace: {{ config.namespace }}
type: Opaque